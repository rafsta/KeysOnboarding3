@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/Library")
@Html.Partial("_Modal")
<h2>Customers</h2>

<table class="table table-light table-hover" id="CustomersTable" data-bind="visible: Customers().length > 0">
    <thead>
        <tr>
            <th>Customer Name</th>
            <th>Address</th>
            <th>Action(Edit)</th>
            <th>Action(Delete)</th>
        </tr>
    </thead>

    <tbody id="BodyTag" data-bind="foreach: Customers">
        <tr>
            <td style="display:none" id="IdTag" data-bind="text: id"></td>
            <td id="NameTag" data-bind="text: name"></td>
            <td id="AddressTag" data-bind="text: address"></td>
            <td>
                <a id="EditTag" data-bind="#editCustomerModal" class="btn btn-warning">Edit</a>
            </td>
            <td>
                <a id="DeleteTag" data-bind="attr: { 'href': '@Url.Action("Delete", "Customers")/' + id }" class="btn btn-danger">Delete</a>
            </td>
            
        </tr>
    </tbody>
</table>


@section scripts
{
    <script>
        //Load table data
        $(function () {
            function CustomerModel(id, name, address) {
                var self = this;

                //Two way binding for customer elements
                self.id = ko.observable("");
                self.name = ko.observable("");
                self.address = ko.observable("");

                var Customer = {
                    id: self.id,
                    name: self.name,
                    address: self.address
                };

                self.Customer = ko.observable();
                self.Customers = ko.observableArray([]);

                $.ajax({
                    url: 'api/customers',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (data) {
                        self.Customers(data);
                    }
                });

                //Create Customer
                self.create = function () {

                    $.ajax({
                        url: 'api/customers',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Customer),
                        success: function (data) {
                            //CustomerModel.customers.push(new Customer(data.id, data.name, data.address));
                            self.Customers.push(data);
                            self.id(null);
                            self.name("");
                            self.address("");

                        }
                    })
                }

                //Delete Customer
                self.delete = function () {
                    $.ajax({
                        url: 'api/customer' + id,
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: id,
                        success: function (data) {
                            self.Customers.remove(Customer);
                        }
                    })
                }

                //Update Customer
                self.update = function () {
                    $.ajax({
                        url: 'api/customers',
                        cache: false,
                        type: 'PUT',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Product),
                        success: function (data) {
                            self.Customers.removeAll();
                            self.Customers(data); //Put the response in ObservableArray
                            self.Customer(null);
                            alert("Record Updated Successfully");
                        }
                    })
                }

            }

            var CustomerViewModel = new CustomerModel();
            ko.applyBindings(CustomerViewModel);
        });
             


    </script>}