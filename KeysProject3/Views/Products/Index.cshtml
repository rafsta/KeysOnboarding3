@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Products</h2>

@Scripts.Render("~/bundles/Library")
@Html.Partial("_Modal")

<table data-bind="ProductModel" class="table table-light table-hover" id="ProductsTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Action(Edit)</th>
            <th>Action(Delete)</th>
        </tr>
    </thead>
    <tbody id="BodyTag" data-bind="foreach: Products">
        <tr>
            <td style="display:none" id="IdTag" data-bind="text: id"></td>
            <td id="NameTag" data-bind="text: name"></td>
            <td id="PriceTag" data-bind="text: price"></td>
            <td>
                <button class="btn btn-warning" data-target="#editProductModal" data-toggle="modal" type="button">
                    Edit
                </button>
            </td>
            <td>
                <button class="btn btn-danger" data-target="#deleteProductModal" data-toggle="modal" type="button">
                    Delete
                </button>
            </td>
        </tr>
    </tbody>
</table>

@section scripts
{
    <script>
        //Load table data
        $(function () {
            function ProductModel(id, name, price) {
                var self = this;

                //Two way binding for customer elements
                self.id = ko.observable(id);
                self.name = ko.observable(name);
                self.price = ko.observable(price);

                var Product = {
                    id: self.id,
                    name: self.name,
                    price: self.price
                };

                self.Product = ko.observable();
                self.Products = ko.observableArray();
                
                $.getJSON("/api/products", function (data) {
                    self.Products(data);
                }).fail(function (err) {
                    console.error("Error " + err.status);
                });

                //Create Product
                self.create = function () {
                    var created = ko.toJSON(this);
                    $.ajax({
                        url: 'api/products',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: created,
                        success: function (data) {
                            location.reload(true);
                        }
                    });
                };

                //Delete Product
                self.picked = ko.observable();
                self.delete = function () {
                    var id = self.picked().id;
                    $.ajax({
                        url: 'api/products' + id,
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: id,
                        success: function (data) {
                            location.reload(true);
                        }
                    });
                };

                //Update Product
                self.update = function () {
                    var updated = self.Product();
                    $.ajax({
                        url: 'api/products' + updated.id,
                        cache: false,
                        type: 'PUT',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(updated),
                        success: function (data) {
                            location.reload(true);
                        }
                    });
                };

            }

            var ProductModel = new ProductModel();
            ko.applyBindings(ProductModel);
        });



    </script>}