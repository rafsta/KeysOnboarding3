@{
    ViewBag.Title = "Stores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Stores</h2>

@Scripts.Render("~/bundles/Library")
@Html.Partial("_Modal")

<table class="table table-light table-hover" id="storestable">
    <thead>
        <tr>
            <th>Store Name</th>
            <th>Address</th>
            <th>Action(Edit)</th>
            <th>Action(Delete)</th>
        </tr>
    </thead>
    <tbody id="BodyTag" data-bind="foreach: Stores">
        <tr>
            <td style="display:none" id="IdTag" data-bind="text: id"></td>
            <td id="NameTag" data-bind="text: name"></td>
            <td id="AddressTag" data-bind="text: address"></td>
            <td>
                <button data-bind="editBtn" class="btn btn-warning" data-target="#editStoreModal" data-toggle="modal" type="button">
                    Edit
                </button>
            </td>
            <td>
                <button data-bind="deleteBtn" class="btn btn-danger" data-target="#deleteStoreModal" data-toggle="modal" type="button">
                    Delete
                </button>
            </td>
        </tr>
    </tbody>
</table>

@section scripts
    {
    <script>
        //Load table data
        $(function () {
            function StoreModel(id, name, address) {
                var self = this;

                //Two way binding for customer elements
                self.id = ko.observable(id);
                self.name = ko.observable(name).extend({ required: "Please enter a name for the store." });
                self.address = ko.observable(address).extend({ required: "Please enter an address for the store." });

                var Store = {
                    id: self.id,
                    name: self.name,
                    address: self.address
                };

                self.Store = ko.observable();
                self.Stores = ko.observableArray();

                $.getJSON("/api/stores", function (data) {
                    self.Stores(data);
                }).fail(function (err) {
                    console.error("Error " + err.status);
                });

                //Create Store
                self.create = function () {
                    var data = created;
                    $.ajax({
                        url: 'api/stores',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Store),
                        success: function (data) {
                            location.reload(true);
                        }.fail(function (err) {
                            console.error("Error " + err.status);
                        })
                    });
                };

                //Delete Store
                self.DELETE = ko.observable();
                self.delete = function () {
                    var id = self.DELETE().id;
                    $.ajax({
                        url: 'api/stores' + id,
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: Id,
                        success: function (data) {
                            location.reload(true);
                        }.fail(function (err) {
                            console.error("Error " + err.status);
                        })
                    });
                };

                //Update Store
                self.editBtn = function (Store) {
                    self.Store(Store);
                }
                self.UPDATE = ko.observable();
                self.update = function () {
                    var id = self.UPDATE().id;
                    $.ajax({
                        url: 'api/stores' + UPDATE.id,
                        cache: false,
                        type: 'PUT',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Store),
                        success: function (data) {
                            location.reload(true);
                        }.fail(function (err) {
                            console.error("Error " + err.status);
                        })
                    });
                };
            }
            var StoreViewModel = new StoreModel();
            ko.applyBindings(StoreViewModel);
        });


    </script>}